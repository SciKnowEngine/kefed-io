
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    edu.isi.bmkeg.kefed.ui
 *  Class:      DesignerComponent
 *  Source:     /Users/Gully/Documents/Projects/2_active/IEDB/work/kefedEditor/src/main/flex/edu/isi/bmkeg/kefed/ui/DesignerComponent.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2017.08.30 16:17:00 PDT
 */

package edu.isi.bmkeg.kefed.ui
{

import com.kapit.diagram.controls.SVGAssetLibraryGroupTile;
import com.kapit.diagram.view.DiagramView;
import edu.isi.bmkeg.kefed.elements.KefedObject;
import edu.isi.bmkeg.kefed.ontology.OntologySearchInterface;
import edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs;
import edu.isi.bmkeg.kefed.ui.VariableTemplateTabs;
import edu.isi.bmkeg.kefed.ui.kapit.DiagramZoomHSlider;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Accordion;
import mx.containers.ControlBar;
import mx.containers.Form;
import mx.containers.FormHeading;
import mx.containers.FormItem;
import mx.containers.HBox;
import mx.containers.HDividedBox;
import mx.containers.Panel;
import mx.containers.VBox;
import mx.controls.Button;
import mx.controls.DataGrid;
import mx.controls.Label;
import mx.controls.Text;
import mx.controls.TextArea;
import mx.controls.TextInput;
import mx.controls.dataGridClasses.DataGridColumn;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.events.ListEvent;
import mx.states.AddChild;
import mx.states.RemoveChild;
import mx.states.State;
import mx.styles.*;


[States("ExperimentalObject_State", "Activity_State", "ParameterSpecification_State", "ConstantSpecification_State", "MeasurementSpecification_State", "Branch_State", "Fork_State")]

//  begin class def
public class DesignerComponent
    extends mx.containers.VBox
    implements mx.binding.IBindingClient
{

    //  instance variables
/**
 * @private
 **/
    public var _DesignerComponent_AddChild1 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_AddChild2 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_AddChild3 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_AddChild4 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_AddChild5 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_AddChild6 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_AddChild7 : mx.states.AddChild;

/**
 * @private
 **/
    public var _DesignerComponent_Button2 : mx.controls.Button;

/**
 * @private
 **/
    public var _DesignerComponent_Button4 : mx.controls.Button;

/**
 * @private
 **/
    public var _DesignerComponent_Button5 : mx.controls.Button;

/**
 * @private
 **/
    public var _DesignerComponent_NamedObjectTemplateTabs1 : edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs;

/**
 * @private
 **/
    public var _DesignerComponent_NamedObjectTemplateTabs2 : edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild1 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild2 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild3 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild4 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild5 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild6 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_RemoveChild7 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _DesignerComponent_Text2 : mx.controls.Text;

/**
 * @private
 **/
    public var _DesignerComponent_Text3 : mx.controls.Text;

/**
 * @private
 **/
    public var _DesignerComponent_VariableTemplateTabs1 : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs;

/**
 * @private
 **/
    public var _DesignerComponent_VariableTemplateTabs2 : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs;

/**
 * @private
 **/
    public var _DesignerComponent_VariableTemplateTabs3 : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs;

    [Bindable]
	/**
 * @private
 **/
    public var activeObjectForm : mx.containers.Panel;

    [Bindable]
	/**
 * @private
 **/
    public var citationField : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var controlForm : mx.containers.ControlBar;

    [Bindable]
	/**
 * @private
 **/
    public var descriptionField : mx.controls.TextArea;

    [Bindable]
	/**
 * @private
 **/
    public var diagram : com.kapit.diagram.view.DiagramView;

    [Bindable]
	/**
 * @private
 **/
    public var editpanel : mx.containers.Accordion;

    [Bindable]
	/**
 * @private
 **/
    public var elementGrid : mx.containers.Panel;

    [Bindable]
	/**
 * @private
 **/
    public var flatPanel : mx.containers.Panel;

    [Bindable]
	/**
 * @private
 **/
    public var modelDetails : mx.containers.Panel;

    [Bindable]
	/**
 * @private
 **/
    public var modelInfo : mx.containers.Form;

    [Bindable]
	/**
 * @private
 **/
    public var nameField : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var objectsGrid : mx.controls.DataGrid;

    [Bindable]
	/**
 * @private
 **/
    public var showPlButton : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var sourceField : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var zoomControl : edu.isi.bmkeg.kefed.ui.kapit.DiagramZoomHSlider;


    //  type-import dummies


    //  Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.VBox
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.HDividedBox
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          percentHeight: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.VBox
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 70.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.Panel
                    ,
                    id: "flatPanel"
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      percentHeight: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          stylesFactory: function():void {
                            this.verticalAlign = "middle";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0,
                            height: 30,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: com.kapit.diagram.controls.SVGAssetLibraryGroupTile
                                ,
                                stylesFactory: function():void {
                                  this.paddingLeft = 8;
                                  this.paddingBottom = 3;
                                  this.paddingTop = 3;
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  width: 184,
                                  height: 28,
                                  groupid: "Basic",
                                  useHandCursor: true
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Label
                                ,
                                propertiesFactory: function():Object { return {
                                  text: "Zoom: "
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: edu.isi.bmkeg.kefed.ui.kapit.DiagramZoomHSlider
                                ,
                                id: "zoomControl"
                                ,
                                propertiesFactory: function():Object { return {
                                  minimum: 0,
                                  maximum: 1.7
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                events: {
                                  click: "___DesignerComponent_Button1_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Reset Zoom"
                                }}
                              })
                            ,
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.Button
                                ,
                                id: "_DesignerComponent_Button2"
                                ,
                                events: {
                                  click: "___DesignerComponent_Button2_click"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "SVG",
                                  toolTip: "Show SVG code for diagram.  Zoom control must be at 1."
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.HBox
                          ,
                          stylesFactory: function():void {
                            this.verticalAlign = "middle";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0,
                            percentHeight: 100.0,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: com.kapit.diagram.view.DiagramView
                                ,
                                id: "diagram"
                                ,
                                events: {
                                  creationComplete: "__diagram_creationComplete"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  percentWidth: 100.0,
                                  percentHeight: 100.0
                                }}
                              })
                            ]
                          }}
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Text
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      text: "Drag design elements into the diagram panel. Click on an element to show context menu. Edit labels in diagram, elements list or active element panel."
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Panel
              ,
              id: "modelDetails"
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 30.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.Accordion
                    ,
                    id: "editpanel"
                    ,
                    propertiesFactory: function():Object { return {
                      percentHeight: 100.0,
                      percentWidth: 100.0,
                      selectedIndex: 1,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.Panel
                          ,
                          id: "elementGrid"
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Model Elements",
                            percentHeight: 100.0,
                            percentWidth: 100.0,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.controls.DataGrid
                                ,
                                id: "objectsGrid"
                                ,
                                events: {
                                  itemClick: "__objectsGrid_itemClick",
                                  doubleClick: "__objectsGrid_doubleClick",
                                  creationComplete: "__objectsGrid_creationComplete"
                                }
                                ,
                                propertiesFactory: function():Object { return {
                                  doubleClickEnabled: true,
                                  percentWidth: 100.0,
                                  percentHeight: 100.0,
                                  editable: true,
                                  columns: [_DesignerComponent_DataGridColumn1_c(), _DesignerComponent_DataGridColumn2_c()]
                                }}
                              })
                            ]
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.containers.Panel
                          ,
                          id: "activeObjectForm"
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Current Object",
                            percentWidth: 100.0,
                            percentHeight: 100.0,
                            childDescriptors: [
                              new mx.core.UIComponentDescriptor({
                                type: mx.containers.Form
                                ,
                                id: "modelInfo"
                                ,
                                propertiesFactory: function():Object { return {
                                  label: "Model",
                                  percentHeight: 40.0,
                                  percentWidth: 100.0,
                                  childDescriptors: [
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormHeading
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Model Info"
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormItem
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Name",
                                        direction: "horizontal",
                                        percentWidth: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.TextInput
                                            ,
                                            id: "nameField"
                                            ,
                                            events: {
                                              valueCommit: "__nameField_valueCommit"
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormItem
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Description",
                                        direction: "horizontal",
                                        percentWidth: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.TextArea
                                            ,
                                            id: "descriptionField"
                                            ,
                                            events: {
                                              valueCommit: "__descriptionField_valueCommit"
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              height: 120,
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormItem
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Date/Time",
                                        direction: "horizontal",
                                        percentWidth: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Text
                                            ,
                                            id: "_DesignerComponent_Text2"
                                            ,
                                            propertiesFactory: function():Object { return {
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormItem
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Source",
                                        direction: "horizontal",
                                        percentWidth: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.TextInput
                                            ,
                                            id: "sourceField"
                                            ,
                                            events: {
                                              valueCommit: "__sourceField_valueCommit"
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormItem
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Citation Key",
                                        direction: "horizontal",
                                        percentWidth: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.TextInput
                                            ,
                                            id: "citationField"
                                            ,
                                            events: {
                                              valueCommit: "__citationField_valueCommit"
                                            }
                                            ,
                                            propertiesFactory: function():Object { return {
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ,
                                    new mx.core.UIComponentDescriptor({
                                      type: mx.containers.FormItem
                                      ,
                                      propertiesFactory: function():Object { return {
                                        label: "Type",
                                        direction: "horizontal",
                                        percentWidth: 100.0,
                                        childDescriptors: [
                                          new mx.core.UIComponentDescriptor({
                                            type: mx.controls.Text
                                            ,
                                            id: "_DesignerComponent_Text3"
                                            ,
                                            propertiesFactory: function():Object { return {
                                              percentWidth: 100.0
                                            }}
                                          })
                                        ]
                                      }}
                                    })
                                  ]
                                }}
                              })
                            ]
                          }}
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    id: "showPlButton"
                    ,
                    events: {
                      click: "__showPlButton_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Show PowerLoom"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.ControlBar
                    ,
                    id: "controlForm"
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Control Form",
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          id: "_DesignerComponent_Button4"
                          ,
                          events: {
                            click: "___DesignerComponent_Button4_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Save Design"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          id: "_DesignerComponent_Button5"
                          ,
                          events: {
                            click: "___DesignerComponent_Button5_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Save & Exit"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          events: {
                            click: "___DesignerComponent_Button6_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Cancel"
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function DesignerComponent()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _DesignerComponent_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_edu_isi_bmkeg_kefed_ui_DesignerComponentWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return DesignerComponent[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.percentHeight = 100.0;
        this.percentWidth = 100.0;
        this.states = [_DesignerComponent_State1_c(), _DesignerComponent_State2_c(), _DesignerComponent_State3_c(), _DesignerComponent_State4_c(), _DesignerComponent_State5_c(), _DesignerComponent_State6_c(), _DesignerComponent_State7_c()];


        // events
        this.addEventListener("preinitialize", ___DesignerComponent_VBox1_preinitialize);


        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


    //  scripts
    //  <Script>, line 14 - 355

		import com.kapit.diagram.DiagramEvent;
		import com.kapit.diagram.layers.DiagramLane;
		import com.kapit.diagram.layers.DiagramPanel;
		import com.kapit.diagram.layouts.utils.Constants;
		import com.kapit.diagram.library.SVGAssetLibrary;
		import com.kapit.diagram.model.DiagramModel;
		import com.kapit.diagram.proxies.DiagramProxy;
		import com.kapit.diagram.proxies.KDLProxy;
		import com.kapit.diagram.view.DiagramObject;
		import com.kapit.diagram.view.DiagramSprite;
		import com.kapit.diagram.view.DiagramView;
		
		import edu.isi.bmkeg.kefed.app.KefedAppEvent;
		import edu.isi.bmkeg.kefed.app.KefedAppEventDispatcher;
		import edu.isi.bmkeg.kefed.elements.KefedModel;
		import edu.isi.bmkeg.kefed.elements.KefedObject;
		import edu.isi.bmkeg.kefed.elements.KefedPersevereEvent;
		import edu.isi.bmkeg.kefed.elements.KefedPersevereInterface;
		import edu.isi.bmkeg.kefed.ontology.OntologySearchInterface;
		import edu.isi.bmkeg.kefed.store.IDataStore;
		import edu.isi.bmkeg.kefed.store.IModelStore;
		import edu.isi.bmkeg.kefed.store.ModelStoreEvent;
		import edu.isi.bmkeg.kefed.store.persevere.PersevereModelStore;
		import edu.isi.bmkeg.kefed.ui.kapit.DiagramMappings;
		import edu.isi.bmkeg.kefed.ui.kapit.KefedLinkProxy;
		import edu.isi.bmkeg.kefed.ui.kapit.KefedObjectProxy;
		import edu.isi.bmkeg.utils.powerloom.PLExporter;
		
		import flare.analytics.graph.LinkDistance;
		import flare.vis.data.NodeSprite;
		
		import flash.utils.getDefinitionByName;
		
		import mx.binding.utils.ChangeWatcher;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.core.FlexGlobals;
		import mx.events.DataGridEvent;
		import mx.events.FlexEvent;
		import mx.events.IndexChangedEvent;
		import mx.events.ListEvent;
		import mx.managers.CursorManager;
		import mx.managers.PopUpManager;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.utils.ColorUtil;
		import mx.utils.StringUtil;

		// added to overcome 'class not found errors'
        private var hackFix1:KefedObjectProxy;
        private var hackFix2:KefedLinkProxy;

		[Bindable]
		public var myObjects:ArrayCollection;

		[Bindable]
		public var myLinks:ArrayCollection;

		[Bindable]
		public var myObject:KefedObject;
		
		/** Ontology search interface to be used for term lookup.
		 *  Required for proper finding of ontology terms.
		 */
		[Bindable]
		public var termLookupService:OntologySearchInterface;


		[Bindable]
		public var graph:KefedModel = new KefedModel();

		[Bindable]
		public var zoomFactor:Number = 1;
		
		[Bindable]
		public var saveAllowed:Boolean = true;

		private var newPanelIndex:int = 0;  // Accordion panel index to set.
        private var _proxy:DiagramProxy;
            
        public function preinit():void
        {

            if(FlexGlobals.topLevelApplication.eventDispatcher != null ) {
				FlexGlobals.topLevelApplication.eventDispatcher.
						addEventListener(KefedAppEvent.EDIT_DESIGN, loadModelEventListener);
			
			}
     }
        
        public function initDiagram():void
        {
             _proxy = new KDLProxy(diagram);
            diagram.multipanel=false;
            diagram.selectionenabled=true;
            diagram.keyboardenabled=true;
            diagram.dragenabled=true;
            diagram.dropenabled=true;
            var sprites:Array = [];

			diagram.model = new DiagramModel(DiagramMappings.getDiagramMappings());
			
			if( diagram != null && _proxy != null) {

				diagram.addEventListener(DiagramEvent.SELECTION_CHANGED,
							handleDiagramSelectionChanged);
	
	            _proxy.importGraph();
	            _proxy.exportGraph(Constants.RADIAL_LAYOUT);
	  		}	
			
			this.loadModel(this.graph);

//			diagram.addEventListener(DiagramEvent.DIAGRAM_ZOOM_MODE_SET, traceEvent);
//			diagram.addEventListener(DiagramEvent.DIAGRAM_MODIFIED, traceEvent);
//			diagram.addEventListener(DiagramEvent.ELEMENT_RESIZE_FINISHED, traceEvent);

            diagram.deselectAll();
        }
        
        /** Load the model into the designer component.
        * 
        * @param model The model to load into the editor
        */

		public function loadModel(model:KefedModel):void{
			CursorManager.setBusyCursor();
            graph = model;

			// Hack: loading the model the 2nd time triggers the 
			// editing updates when you load the diagram from XML
			// Having this temporary model that gets edited by 
			// the update and then discarded fixes the problem
			var tempModel:KefedModel = new KefedModel();
			KefedObjectProxy._graph = tempModel;
			KefedLinkProxy._graph = tempModel;
				
			myObjects = graph.bNodes;
			myLinks = graph.bEdges;
			
			if( diagram != null && _proxy != null) {
		
				diagram.fromXML(model.diagramXML);
				_proxy.importGraph()
				zoomControl.setZoom(zoomFactor);
            } 
			KefedObjectProxy._graph = graph;
			KefedLinkProxy._graph = graph;
			diagram.deselectAll();
			CursorManager.removeBusyCursor();
        }
        
		public function loadModelEventListener(event:KefedAppEvent):void {
			this.loadModel(event.activeModel);
            handleDiagramSelectionChanged(new Event(DiagramEvent.SELECTION_CHANGED));
        }
                
		private function cancelSave(event:MouseEvent):void {
			if(FlexGlobals.topLevelApplication.eventDispatcher != null ) {
				FlexGlobals.topLevelApplication.eventDispatcher.
						dispatchBioScholarEvent(KefedAppEvent.CANCEL_DESIGN_EDIT);
			}
		}
		
		private function updateModel():void {
			var panel:DiagramPanel = diagram.panels.getDiagramPanelFromPoint(new Point(0,0));
			if (panel) panel.title = graph.modelName;
			var lane:DiagramLane = diagram.getDiagramLaneUnderPoint(new Point(0,0));
			if (lane) lane.title = graph.modelName;			
		}
		
		private function showPowerLoom(event:MouseEvent):void {
			var d:TextDisplayDialog = new TextDisplayDialog();
			d.title="PowerLoom Representation";
			d.displayText=PLExporter.generateModelDefinitionAssertion(graph, true);
			PopUpManager.addPopUp(d, this);
		}
		
		private function doSave(event:MouseEvent, exit:Boolean):void {
			updateModel();
			
			/*  // Why are we doing this here?  Don't know, so commented out - tar
			// Work around a bug with SVG generation in Kapit.  It only works
			// correctly when the zoom level is set to 1.  So that's what we 
			// do.  Fortunately, since we are exiting, we don't need to set
			// it back.
			if (diagram.childrenScaleX != 1 || diagram.childrenScaleY != 1) {
				zoomControl.setZoom(1);
			}			
			var svg:XML = diagram.toSVG();
			*/
			
			graph.diagramXML = diagram.toXML();
			if(FlexGlobals.topLevelApplication.eventDispatcher != null ) {
			   FlexGlobals.topLevelApplication.eventDispatcher.
						dispatchBioScholarEvent(KefedAppEvent.SAVE_DESIGN_EDIT, graph);
			}
			if (exit) {
				currentState = "";
				FlexGlobals.topLevelApplication.currentState = "Dashboard_State";
			}
		}
			
		private function handleFault(event:FaultEvent):void {
			Alert.show(event.message.toString());				
		}
		private function handleDiagramSelectionChanged(e:Event):void
		{
			var arr:Array=diagram.getSelectedObjects();
			
			var uid:String = null;
			var type:String = null;
			if( arr && arr.length == 1 ) { 
				var dObj:DiagramObject = DiagramObject(arr[0]);
				uid = dObj.dataobjectid;
			}
			
			if(uid) {
				for(var i:int=0;i<myObjects.length;i++) {
					if (myObjects.getItemAt(i).uid == uid) {
						if (objectsGrid != null) {
							objectsGrid.selectedIndex = i;
							objectsGrid.scrollToIndex(i);
						}
						myObject = KefedObject(myObjects.getItemAt(i));
						type = myObject.spriteid;
						currentState = (type.split(" ")).join("") + "_State";
						break;	
					}
				}
			} else {
				if (objectsGrid) objectsGrid.selectedIndex = -1;
				currentState = "";
			}
		}

		private function handleObjectSelectedInGrid(event:ListEvent):void {

            var uid:String = myObjects.getItemAt(event.rowIndex).uid;
            var dob:DiagramObject = DiagramObject(diagram.getElementByDataObjectId(uid));
            diagram.deselectAll();
            diagram.selectObject(dob);

        }
        
        private function handleObjectDoubleClickInGrid(event:MouseEvent):void {
        	editpanel.selectedIndex = 1;
        }
        				
        private function handleLinkSelectedInGrid(event:ListEvent):void {

            var uid:String = myLinks.getItemAt(event.rowIndex).uid;
            var dob:DiagramObject = DiagramObject(diagram.getElementByDataObjectId(uid));
            diagram.deselectAll();
            diagram.selectObject(dob);

        }

        private function showSVG(event:MouseEvent):void {
        	updateModel();
        	var oldZoom:Number = zoomControl.value;
        	trace("Setting zoom to 1, was " + zoomFactor);
        	zoomControl.setZoom(1);
			FlexGlobals.topLevelApplication.callLater(showSVG2, [oldZoom]);
        }
        
        private function showSVG2(oldZoom:Number):void {
        	var svg:XML = diagram.toSVG();
        	var d:TextDisplayDialog = new TextDisplayDialog();
			d.title="Diagram in SVG Format";
			trace("Capturing SVG image");
			d.displayText=svg.toXMLString();
			trace("Finished capturing SVG image");
			PopUpManager.addPopUp(d, this);
			trace("Setting zoom back to " + oldZoom);
			zoomControl.setZoom(oldZoom);
        }
        
        private function handleModelFieldChanged(field:String, newValue:String, event:FlexEvent):void {
        	graph[field] = StringUtil.trim(newValue);
        }
        
     private function handleObjectNameChanged(event:FlexEvent):void {

            var edit:TextInput = TextInput(event.currentTarget);
            var name:String = StringUtil.trim(edit.text);        	
            
            var uid:String = myObject.uid;        	
            
            var dob:DiagramObject = DiagramObject(diagram.getElementByDataObjectId(uid));
            if (dob.annotation)
            	dob.annotation.text = name;
            else
            	diagram.createAnnotation(dob, name);
			myObject.nameValue = name;
        }
        
        private function handleEditIndependentVariableData(event:DataGridEvent):void {

            var edit:TextInput = TextInput(event.currentTarget.itemEditorInstance);
            var dataValue:String = StringUtil.trim(edit.text);
                                 	
        }
        
       private function handleEditVariableData(event:DataGridEvent):void {

            var edit:TextInput = TextInput(event.currentTarget.itemEditorInstance);
            var dataValue:String = StringUtil.trim(edit.text);
                                 	
        }


        private function handleEditEnd(event:DataGridEvent):void {
        	
            var edit:TextInput = TextInput(event.currentTarget.itemEditorInstance);
            var name:String = StringUtil.trim(edit.text);        	
            
            var uid:String = myObjects.getItemAt(event.rowIndex).uid;        	
            
            var dob:DiagramObject = DiagramObject(diagram.getElementByDataObjectId(uid));
            if (dob.annotation)
            	dob.annotation.text = name;
            else 
            	diagram.createAnnotation(dob, name);
            
        }
        
        private function objectsGridCompleted(event:Event):void {
        	// Make sure any selection is highlighted when this item
        	// is built, since this can happen after some interactions with
        	// the graphical tool.
        	handleDiagramSelectionChanged(null);
        }
        
        private function traceEvent(event:Event):void {
        	trace("Event ",event);
        }
 
 
    

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _DesignerComponent_State1_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "ExperimentalObject_State";
	temp.overrides = [_DesignerComponent_AddChild1_i(), _DesignerComponent_RemoveChild1_i()];
	return temp;
}

private function _DesignerComponent_AddChild1_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_NamedObjectTemplateTabs1_i);
	_DesignerComponent_AddChild1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild1", _DesignerComponent_AddChild1);
	return temp;
}

private function _DesignerComponent_NamedObjectTemplateTabs1_i() : edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs
{
	var temp : edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs = new edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs();
	temp.label = "Experimental Object Details";
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.id = "_DesignerComponent_NamedObjectTemplateTabs1";
	if (!temp.document) temp.document = this;
	_DesignerComponent_NamedObjectTemplateTabs1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_NamedObjectTemplateTabs1", _DesignerComponent_NamedObjectTemplateTabs1);
	return temp;
}

private function _DesignerComponent_RemoveChild1_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild1", _DesignerComponent_RemoveChild1);
	return temp;
}

private function _DesignerComponent_State2_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "Activity_State";
	temp.overrides = [_DesignerComponent_AddChild2_i(), _DesignerComponent_RemoveChild2_i()];
	return temp;
}

private function _DesignerComponent_AddChild2_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_NamedObjectTemplateTabs2_i);
	_DesignerComponent_AddChild2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild2", _DesignerComponent_AddChild2);
	return temp;
}

private function _DesignerComponent_NamedObjectTemplateTabs2_i() : edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs
{
	var temp : edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs = new edu.isi.bmkeg.kefed.ui.NamedObjectTemplateTabs();
	temp.label = "Activity Details";
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.id = "_DesignerComponent_NamedObjectTemplateTabs2";
	if (!temp.document) temp.document = this;
	_DesignerComponent_NamedObjectTemplateTabs2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_NamedObjectTemplateTabs2", _DesignerComponent_NamedObjectTemplateTabs2);
	return temp;
}

private function _DesignerComponent_RemoveChild2_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild2", _DesignerComponent_RemoveChild2);
	return temp;
}

private function _DesignerComponent_State3_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "ParameterSpecification_State";
	temp.overrides = [_DesignerComponent_AddChild3_i(), _DesignerComponent_RemoveChild3_i()];
	return temp;
}

private function _DesignerComponent_AddChild3_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_VariableTemplateTabs1_i);
	_DesignerComponent_AddChild3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild3", _DesignerComponent_AddChild3);
	return temp;
}

private function _DesignerComponent_VariableTemplateTabs1_i() : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs
{
	var temp : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs = new edu.isi.bmkeg.kefed.ui.VariableTemplateTabs();
	temp.label = "Parameter Specification Details";
	temp.monotonic = false;
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.id = "_DesignerComponent_VariableTemplateTabs1";
	if (!temp.document) temp.document = this;
	_DesignerComponent_VariableTemplateTabs1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_VariableTemplateTabs1", _DesignerComponent_VariableTemplateTabs1);
	return temp;
}

private function _DesignerComponent_RemoveChild3_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild3", _DesignerComponent_RemoveChild3);
	return temp;
}

private function _DesignerComponent_State4_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "ConstantSpecification_State";
	temp.overrides = [_DesignerComponent_AddChild4_i(), _DesignerComponent_RemoveChild4_i()];
	return temp;
}

private function _DesignerComponent_AddChild4_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_VariableTemplateTabs2_i);
	_DesignerComponent_AddChild4 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild4", _DesignerComponent_AddChild4);
	return temp;
}

private function _DesignerComponent_VariableTemplateTabs2_i() : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs
{
	var temp : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs = new edu.isi.bmkeg.kefed.ui.VariableTemplateTabs();
	temp.label = "Constant Specification Details";
	temp.monotonic = false;
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.id = "_DesignerComponent_VariableTemplateTabs2";
	if (!temp.document) temp.document = this;
	_DesignerComponent_VariableTemplateTabs2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_VariableTemplateTabs2", _DesignerComponent_VariableTemplateTabs2);
	return temp;
}

private function _DesignerComponent_RemoveChild4_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild4 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild4", _DesignerComponent_RemoveChild4);
	return temp;
}

private function _DesignerComponent_State5_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "MeasurementSpecification_State";
	temp.overrides = [_DesignerComponent_AddChild5_i(), _DesignerComponent_RemoveChild5_i()];
	return temp;
}

private function _DesignerComponent_AddChild5_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_VariableTemplateTabs3_i);
	_DesignerComponent_AddChild5 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild5", _DesignerComponent_AddChild5);
	return temp;
}

private function _DesignerComponent_VariableTemplateTabs3_i() : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs
{
	var temp : edu.isi.bmkeg.kefed.ui.VariableTemplateTabs = new edu.isi.bmkeg.kefed.ui.VariableTemplateTabs();
	temp.label = "Measurement Specification Details";
	temp.monotonic = false;
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.id = "_DesignerComponent_VariableTemplateTabs3";
	if (!temp.document) temp.document = this;
	_DesignerComponent_VariableTemplateTabs3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_VariableTemplateTabs3", _DesignerComponent_VariableTemplateTabs3);
	return temp;
}

private function _DesignerComponent_RemoveChild5_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild5 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild5", _DesignerComponent_RemoveChild5);
	return temp;
}

private function _DesignerComponent_State6_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "Branch_State";
	temp.overrides = [_DesignerComponent_AddChild6_i(), _DesignerComponent_RemoveChild6_i()];
	return temp;
}

private function _DesignerComponent_AddChild6_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_Form1_c);
	_DesignerComponent_AddChild6 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild6", _DesignerComponent_AddChild6);
	return temp;
}

private function _DesignerComponent_Form1_c() : mx.containers.Form
{
	var temp : mx.containers.Form = new mx.containers.Form();
	temp.percentWidth = 100.0;
	if (!temp.document) temp.document = this;
	temp.mx_internal::_documentDescriptor = 
		new mx.core.UIComponentDescriptor({
		  type: mx.containers.Form
		  ,
		  propertiesFactory: function():Object { return {
		    childDescriptors: [
		      new mx.core.UIComponentDescriptor({
		        type: mx.containers.FormHeading
		        ,
		        propertiesFactory: function():Object { return {
		          label: "Branch Details"
		        }}
		      })
		    ,
		      new mx.core.UIComponentDescriptor({
		        type: mx.containers.FormItem
		        ,
		        propertiesFactory: function():Object { return {
		          label: "",
		          direction: "horizontal",
		          percentWidth: 100.0,
		          childDescriptors: [
		            new mx.core.UIComponentDescriptor({
		              type: mx.controls.Label
		              ,
		              propertiesFactory: function():Object { return {
		                text: "No additional information required"
		              }}
		            })
		          ]
		        }}
		      })
		    ]
		  }}
		})
	;
	temp.mx_internal::_documentDescriptor.document = this;
	return temp;
}

private function _DesignerComponent_RemoveChild6_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild6 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild6", _DesignerComponent_RemoveChild6);
	return temp;
}

private function _DesignerComponent_State7_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "Fork_State";
	temp.overrides = [_DesignerComponent_AddChild7_i(), _DesignerComponent_RemoveChild7_i()];
	return temp;
}

private function _DesignerComponent_AddChild7_i() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_DesignerComponent_Form2_c);
	_DesignerComponent_AddChild7 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_AddChild7", _DesignerComponent_AddChild7);
	return temp;
}

private function _DesignerComponent_Form2_c() : mx.containers.Form
{
	var temp : mx.containers.Form = new mx.containers.Form();
	temp.percentWidth = 100.0;
	if (!temp.document) temp.document = this;
	temp.mx_internal::_documentDescriptor = 
		new mx.core.UIComponentDescriptor({
		  type: mx.containers.Form
		  ,
		  propertiesFactory: function():Object { return {
		    childDescriptors: [
		      new mx.core.UIComponentDescriptor({
		        type: mx.containers.FormHeading
		        ,
		        propertiesFactory: function():Object { return {
		          label: "Fork Details"
		        }}
		      })
		    ,
		      new mx.core.UIComponentDescriptor({
		        type: mx.containers.FormItem
		        ,
		        propertiesFactory: function():Object { return {
		          label: "",
		          direction: "horizontal",
		          percentWidth: 100.0,
		          childDescriptors: [
		            new mx.core.UIComponentDescriptor({
		              type: mx.controls.Label
		              ,
		              propertiesFactory: function():Object { return {
		                text: "No additional information required"
		              }}
		            })
		          ]
		        }}
		      })
		    ]
		  }}
		})
	;
	temp.mx_internal::_documentDescriptor.document = this;
	return temp;
}

private function _DesignerComponent_RemoveChild7_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_DesignerComponent_RemoveChild7 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DesignerComponent_RemoveChild7", _DesignerComponent_RemoveChild7);
	return temp;
}

/**
 * @private
 **/
public function ___DesignerComponent_VBox1_preinitialize(event:mx.events.FlexEvent):void
{
	preinit();
}

/**
 * @private
 **/
public function ___DesignerComponent_Button1_click(event:flash.events.MouseEvent):void
{
	zoomControl.setZoom(1)
}

/**
 * @private
 **/
public function ___DesignerComponent_Button2_click(event:flash.events.MouseEvent):void
{
	showSVG(event)
}

/**
 * @private
 **/
public function __diagram_creationComplete(event:mx.events.FlexEvent):void
{
	initDiagram();
}

private function _DesignerComponent_DataGridColumn1_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "KEfED Type";
	temp.dataField = "spriteid";
	temp.editable = false;
	return temp;
}

private function _DesignerComponent_DataGridColumn2_c() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	temp.headerText = "Name";
	temp.dataField = "nameValue";
	temp.editable = true;
	return temp;
}

/**
 * @private
 **/
public function __objectsGrid_itemClick(event:mx.events.ListEvent):void
{
	handleObjectSelectedInGrid(event);
}

/**
 * @private
 **/
public function __objectsGrid_doubleClick(event:flash.events.MouseEvent):void
{
	handleObjectDoubleClickInGrid(event);
}

/**
 * @private
 **/
public function __objectsGrid_creationComplete(event:mx.events.FlexEvent):void
{
	objectsGridCompleted(event);
}

/**
 * @private
 **/
public function __nameField_valueCommit(event:mx.events.FlexEvent):void
{
	{graph.modelName = nameField.text}
}

/**
 * @private
 **/
public function __descriptionField_valueCommit(event:mx.events.FlexEvent):void
{
	{graph.description = descriptionField.text}
}

/**
 * @private
 **/
public function __sourceField_valueCommit(event:mx.events.FlexEvent):void
{
	{graph.source = sourceField.text}
}

/**
 * @private
 **/
public function __citationField_valueCommit(event:mx.events.FlexEvent):void
{
	{graph.citeKey = citationField.text}
}

/**
 * @private
 **/
public function __showPlButton_click(event:flash.events.MouseEvent):void
{
	showPowerLoom(event)
}

/**
 * @private
 **/
public function ___DesignerComponent_Button4_click(event:flash.events.MouseEvent):void
{
	doSave(event, false)
}

/**
 * @private
 **/
public function ___DesignerComponent_Button5_click(event:flash.events.MouseEvent):void
{
	doSave(event, true)
}

/**
 * @private
 **/
public function ___DesignerComponent_Button6_click(event:flash.events.MouseEvent):void
{
	cancelSave(event)
}


    //  binding mgmt
    private function _DesignerComponent_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild1.relativeTo"
            , "activeObjectForm");

        result[1] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_NamedObjectTemplateTabs1.diagram"
            , "diagram");

        result[2] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_NamedObjectTemplateTabs1.myObject"
            , "myObject");

        result[3] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_NamedObjectTemplateTabs1.termLookupService"
            , "termLookupService");

        result[4] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild1.target"
            , "modelInfo");

        result[5] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild2.relativeTo"
            , "activeObjectForm");

        result[6] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_NamedObjectTemplateTabs2.diagram"
            , "diagram");

        result[7] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_NamedObjectTemplateTabs2.myObject"
            , "myObject");

        result[8] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_NamedObjectTemplateTabs2.termLookupService"
            , "termLookupService");

        result[9] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild2.target"
            , "modelInfo");

        result[10] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild3.relativeTo"
            , "activeObjectForm");

        result[11] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs1.diagram"
            , "diagram");

        result[12] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs1.myObject"
            , "myObject");

        result[13] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs1.termLookupService"
            , "termLookupService");

        result[14] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild3.target"
            , "modelInfo");

        result[15] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild4.relativeTo"
            , "activeObjectForm");

        result[16] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs2.diagram"
            , "diagram");

        result[17] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs2.myObject"
            , "myObject");

        result[18] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs2.termLookupService"
            , "termLookupService");

        result[19] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild4.target"
            , "modelInfo");

        result[20] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild5.relativeTo"
            , "activeObjectForm");

        result[21] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs3.diagram"
            , "diagram");

        result[22] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs3.myObject"
            , "myObject");

        result[23] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_VariableTemplateTabs3.termLookupService"
            , "termLookupService");

        result[24] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild5.target"
            , "modelInfo");

        result[25] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild6.relativeTo"
            , "activeObjectForm");

        result[26] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild6.target"
            , "modelInfo");

        result[27] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_AddChild7.relativeTo"
            , "activeObjectForm");

        result[28] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_RemoveChild7.target"
            , "modelInfo");

        result[29] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.modelName);
                return (result == undefined ? null : String(result));
            },
            null,
            "flatPanel.title"
            );

        result[30] = new mx.binding.Binding(this,
            function():Number
            {

                return (flatPanel.getStyle('borderAlpha'));
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                flatPanel.setStyle("backgroundAlpha", _sourceFunctionReturnValue);
            },
            "flatPanel.backgroundAlpha"
            );

        result[31] = new mx.binding.Binding(this,
            function():uint
            {

                return (flatPanel.getStyle('borderColor'));
            },
            function(_sourceFunctionReturnValue:uint):void
            {
                flatPanel.setStyle("backgroundColor", _sourceFunctionReturnValue);
            },
            "flatPanel.backgroundColor"
            );

        result[32] = new mx.binding.Binding(this,
            null,
            null,
            "zoomControl.value"
            , "zoomFactor");

        result[33] = new mx.binding.Binding(this,
            null,
            null,
            "zoomControl.diagram"
            , "diagram");

        result[34] = new mx.binding.Binding(this,
            function():Boolean
            {

                return (zoomControl.value == 1);
            },
            null,
            "_DesignerComponent_Button2.enabled"
            );

        result[35] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.modelName);
                return (result == undefined ? null : String(result));
            },
            null,
            "modelDetails.title"
            );

        result[36] = new mx.binding.Binding(this,
            function():Number
            {

                return (modelDetails.getStyle('borderAlpha'));
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                modelDetails.setStyle("backgroundAlpha", _sourceFunctionReturnValue);
            },
            "modelDetails.backgroundAlpha"
            );

        result[37] = new mx.binding.Binding(this,
            function():uint
            {

                return (modelDetails.getStyle('borderColor'));
            },
            function(_sourceFunctionReturnValue:uint):void
            {
                modelDetails.setStyle("backgroundColor", _sourceFunctionReturnValue);
            },
            "modelDetails.backgroundColor"
            );

        result[38] = new mx.binding.Binding(this,
            function():Number
            {

                return (modelDetails.getStyle('borderAlpha'));
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                elementGrid.setStyle("backgroundAlpha", _sourceFunctionReturnValue);
            },
            "elementGrid.backgroundAlpha"
            );

        result[39] = new mx.binding.Binding(this,
            function():uint
            {

                return (modelDetails.getStyle('borderColor'));
            },
            function(_sourceFunctionReturnValue:uint):void
            {
                elementGrid.setStyle("backgroundColor", _sourceFunctionReturnValue);
            },
            "elementGrid.backgroundColor"
            );

        result[40] = new mx.binding.Binding(this,
            null,
            null,
            "objectsGrid.dataProvider"
            , "myObjects");

        result[41] = new mx.binding.Binding(this,
            function():Number
            {

                return (modelDetails.getStyle('borderAlpha'));
            },
            function(_sourceFunctionReturnValue:Number):void
            {
                activeObjectForm.setStyle("backgroundAlpha", _sourceFunctionReturnValue);
            },
            "activeObjectForm.backgroundAlpha"
            );

        result[42] = new mx.binding.Binding(this,
            function():uint
            {

                return (modelDetails.getStyle('borderColor'));
            },
            function(_sourceFunctionReturnValue:uint):void
            {
                activeObjectForm.setStyle("backgroundColor", _sourceFunctionReturnValue);
            },
            "activeObjectForm.backgroundColor"
            );

        result[43] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.modelName);
                return (result == undefined ? null : String(result));
            },
            null,
            "nameField.text"
            );

        result[44] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.description);
                return (result == undefined ? null : String(result));
            },
            null,
            "descriptionField.text"
            );

        result[45] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.dateTime);
                return (result == undefined ? null : String(result));
            },
            null,
            "_DesignerComponent_Text2.text"
            );

        result[46] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.source);
                return (result == undefined ? null : String(result));
            },
            null,
            "sourceField.text"
            );

        result[47] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.citeKey);
                return (result == undefined ? null : String(result));
            },
            null,
            "citationField.text"
            );

        result[48] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (graph.type);
                return (result == undefined ? null : String(result));
            },
            null,
            "_DesignerComponent_Text3.text"
            );

        result[49] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_Button4.enabled"
            , "saveAllowed");

        result[50] = new mx.binding.Binding(this,
            null,
            null,
            "_DesignerComponent_Button5.enabled"
            , "saveAllowed");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (DesignerComponent)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
