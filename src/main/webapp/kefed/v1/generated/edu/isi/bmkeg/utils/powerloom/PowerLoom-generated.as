
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    edu.isi.bmkeg.utils.powerloom
 *  Class:      PowerLoom
 *  Source:     /Users/Gully/Documents/Projects/2_active/IEDB/work/kefedEditor/src/main/flex/edu/isi/bmkeg/utils/powerloom/PowerLoom.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2017.08.30 16:17:00 PDT
 */

package edu.isi.bmkeg.utils.powerloom
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.HBox;
import mx.containers.Panel;
import mx.containers.VBox;
import mx.controls.Button;
import mx.controls.DataGrid;
import mx.controls.HRule;
import mx.controls.Label;
import mx.controls.TextArea;
import mx.controls.TextInput;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.rpc.events.FaultEvent;
import mx.rpc.events.ResultEvent;
import mx.rpc.soap.mxml.Operation;
import mx.rpc.soap.mxml.WebService;
import mx.styles.*;



//  begin class def
public class PowerLoom
    extends mx.containers.Panel
    implements mx.binding.IBindingClient
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var askInput : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var askResult : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var commandInput : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var commandResult : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var desiredAnswers : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var doAskButton : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var doCommandButton : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var doRetrievalButton : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var errorDetail : mx.controls.TextArea;

    [Bindable]
	/**
 * @private
 **/
    public var errorType : mx.controls.Label;

    [Bindable]
	/**
 * @private
 **/
    public var moduleInput : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var nAnswers : mx.controls.Label;

    [Bindable]
	/**
 * @private
 **/
    public var plsoapWS : mx.rpc.soap.mxml.WebService;

    [Bindable]
	/**
 * @private
 **/
    public var retrievalInput : mx.controls.TextArea;

    [Bindable]
	/**
 * @private
 **/
    public var retrievalResults : mx.controls.DataGrid;


    //  type-import dummies


    //  Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Panel
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.HBox
        ,
        propertiesFactory: function():Object { return {
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.VBox
              ,
              propertiesFactory: function():Object { return {
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextInput
                    ,
                    id: "moduleInput"
                    ,
                    propertiesFactory: function():Object { return {
                      text: "EXPERIMENTS"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextInput
                    ,
                    id: "commandInput"
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    id: "doCommandButton"
                    ,
                    events: {
                      click: "__doCommandButton_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Do Command"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextInput
                    ,
                    id: "commandResult"
                    ,
                    propertiesFactory: function():Object { return {
                      enabled: false,
                      percentWidth: 100.0
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.HRule
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextInput
                    ,
                    id: "askInput"
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    id: "doAskButton"
                    ,
                    events: {
                      click: "__doAskButton_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Do Ask"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextInput
                    ,
                    id: "askResult"
                    ,
                    propertiesFactory: function():Object { return {
                      enabled: false
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.HRule
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextInput
                    ,
                    id: "desiredAnswers"
                    ,
                    propertiesFactory: function():Object { return {
                      enabled: true,
                      text: "ALL"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextArea
                    ,
                    id: "retrievalInput"
                    ,
                    propertiesFactory: function():Object { return {
                      minWidth: 640,
                      percentWidth: 100.0,
                      height: 150
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    id: "doRetrievalButton"
                    ,
                    events: {
                      click: "__doRetrievalButton_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Do Retrieval"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Label
                    ,
                    id: "nAnswers"
                    ,
                    stylesFactory: function():void {
                      this.color = 0;
                    }
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "retrievalResults"
                    ,
                    propertiesFactory: function():Object { return {
                      enabled: true,
                      minColumnWidth: 300
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Label
                    ,
                    id: "errorType"
                    ,
                    stylesFactory: function():void {
                      this.color = 16711680;
                    }
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.TextArea
                    ,
                    id: "errorDetail"
                    ,
                    stylesFactory: function():void {
                      this.color = 16711680;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      editable: false,
                      percentWidth: 100.0
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function PowerLoom()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _PowerLoom_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_edu_isi_bmkeg_utils_powerloom_PowerLoomWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return PowerLoom[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.label = "PowerLoom";
        _PowerLoom_WebService1_i();


        // events


        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


    //  scripts
    //  <Script>, line 9 - 59

			import edu.isi.bmkeg.kefed.ui.UiUtil;
			import edu.isi.bmkeg.utils.powerloom.PL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.rpc.soap.WebService;
			
			namespace plsoap = "http://www.isi.edu/powerloom/";
			
			[Bindable]
			public var plserver:String;
			
			public function commandResultHandler(event:ResultEvent):void {
				clearError();
				var xmlDoc:XML = new XML(plsoapWS.Command.lastResult);
				commandResult.text = xmlDoc;
			}
			
			public function askResultHandler(event:ResultEvent):void {
				clearError();
				var xmlDoc:XML = new XML(plsoapWS.Ask.lastResult);
				askResult.text = xmlDoc.plsoap::result;
			}
			
			public function retrievalResultHandler(event:ResultEvent):void {
				clearError();
				var xmlDoc:XML = new XML(plsoapWS.Retrieval.lastResult);
//				trace(xmlDoc.toXMLString());
//				trace(xmlDoc.plsoap::nresults);
				PL.displayQueryResults(xmlDoc, retrievalResults, nAnswers);
			}
			

			public function clearError ():void {
				errorType.text="";
				errorDetail.text="";
			}
			
			public function faultHandler(event:FaultEvent):void {
				errorType.text=event.fault.faultString;
				errorDetail.text = UiUtil.getFaultURL(event) + "\n" + event.fault.faultDetail;
			}
			

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _PowerLoom_WebService1_i() : mx.rpc.soap.mxml.WebService
{
	var temp : mx.rpc.soap.mxml.WebService = new mx.rpc.soap.mxml.WebService();
	temp.useProxy = false;
	temp.wsdl = null;
	temp.showBusyCursor = true;
	temp.operations = {Command: _PowerLoom_Operation1_c(), Ask: _PowerLoom_Operation2_c(), Retrieval: _PowerLoom_Operation3_c()};
	temp.addEventListener("fault", __plsoapWS_fault);
	temp.initialized(this, "plsoapWS")
	plsoapWS = temp;
	mx.binding.BindingManager.executeBindings(this, "plsoapWS", plsoapWS);
	return temp;
}

private function _PowerLoom_Operation1_c() : mx.rpc.soap.mxml.Operation
{
	var temp : mx.rpc.soap.mxml.Operation = new mx.rpc.soap.mxml.Operation();
	temp.name = "Command";
	temp.resultFormat = "e4x";
	temp.addEventListener("result", ___PowerLoom_Operation1_result);
	return temp;
}

/**
 * @private
 **/
public function ___PowerLoom_Operation1_result(event:mx.rpc.events.ResultEvent):void
{
	commandResultHandler(event);
}

private function _PowerLoom_Operation2_c() : mx.rpc.soap.mxml.Operation
{
	var temp : mx.rpc.soap.mxml.Operation = new mx.rpc.soap.mxml.Operation();
	temp.name = "Ask";
	temp.resultFormat = "e4x";
	temp.addEventListener("result", ___PowerLoom_Operation2_result);
	return temp;
}

/**
 * @private
 **/
public function ___PowerLoom_Operation2_result(event:mx.rpc.events.ResultEvent):void
{
	askResultHandler(event);
}

private function _PowerLoom_Operation3_c() : mx.rpc.soap.mxml.Operation
{
	var temp : mx.rpc.soap.mxml.Operation = new mx.rpc.soap.mxml.Operation();
	temp.name = "Retrieval";
	temp.resultFormat = "e4x";
	temp.addEventListener("result", ___PowerLoom_Operation3_result);
	return temp;
}

/**
 * @private
 **/
public function ___PowerLoom_Operation3_result(event:mx.rpc.events.ResultEvent):void
{
	retrievalResultHandler(event);
}

/**
 * @private
 **/
public function __plsoapWS_fault(event:mx.rpc.events.FaultEvent):void
{
	faultHandler(event);
}

/**
 * @private
 **/
public function __doCommandButton_click(event:flash.events.MouseEvent):void
{
	PL.doCommand(plsoapWS, moduleInput.text,commandInput.text)
}

/**
 * @private
 **/
public function __doAskButton_click(event:flash.events.MouseEvent):void
{
	PL.doAsk(plsoapWS, moduleInput.text,null,askInput.text)
}

/**
 * @private
 **/
public function __doRetrievalButton_click(event:flash.events.MouseEvent):void
{
	nAnswers.text = "";retrievalResults.dataProvider = null;PL.doRetrieve(plsoapWS, moduleInput.text,desiredAnswers.text,null,null,retrievalInput.text)
}


    //  binding mgmt
    private function _PowerLoom_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (plserver + "ploom/soap-wsdl/powerloom-soap-service.wsdl");
                return (result == undefined ? null : String(result));
            },
            null,
            "plsoapWS.wsdl"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (PowerLoom)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
