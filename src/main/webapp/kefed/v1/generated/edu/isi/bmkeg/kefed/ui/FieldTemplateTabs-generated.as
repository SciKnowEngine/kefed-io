
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    edu.isi.bmkeg.kefed.ui
 *  Class:      FieldTemplateTabs
 *  Source:     /Users/Gully/Documents/Projects/2_active/IEDB/work/kefedEditor/src/main/flex/edu/isi/bmkeg/kefed/ui/FieldTemplateTabs.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2017.08.30 16:17:00 PDT
 */

package edu.isi.bmkeg.kefed.ui
{

import edu.isi.bmkeg.kefed.elements.IKefedAnnotatedObject;
import edu.isi.bmkeg.kefed.elements.IKefedNamedObject;
import edu.isi.bmkeg.kefed.elements.KefedBaseValueTemplate;
import edu.isi.bmkeg.kefed.ontology.OntologySearchInterface;
import edu.isi.bmkeg.kefed.ui.NotesComponent;
import edu.isi.bmkeg.kefed.ui.OntologyIdFormItem;
import edu.isi.bmkeg.kefed.ui.TypeTemplateForm;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Form;
import mx.containers.HBox;
import mx.containers.TabNavigator;
import mx.containers.VBox;
import mx.controls.Label;
import mx.controls.TextInput;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;



//  begin class def
public class FieldTemplateTabs
    extends mx.containers.VBox
    implements mx.binding.IBindingClient
{

    //  instance variables
/**
 * @private
 **/
    public var _FieldTemplateTabs_Form2 : mx.containers.Form;

/**
 * @private
 **/
    public var _FieldTemplateTabs_NotesComponent1 : edu.isi.bmkeg.kefed.ui.NotesComponent;

/**
 * @private
 **/
    public var _FieldTemplateTabs_OntologyIdFormItem1 : edu.isi.bmkeg.kefed.ui.OntologyIdFormItem;

/**
 * @private
 **/
    public var _FieldTemplateTabs_TypeTemplateForm1 : edu.isi.bmkeg.kefed.ui.TypeTemplateForm;

    [Bindable]
	/**
 * @private
 **/
    public var tn : mx.containers.TabNavigator;

    [Bindable]
	/**
 * @private
 **/
    public var variableDataNameControl : mx.controls.TextInput;


    //  type-import dummies


    //  Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.VBox
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.HBox
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                text: "Name"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "variableDataNameControl"
              ,
              events: {
                valueCommit: "__variableDataNameControl_valueCommit"
              }
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0
              }}
            })
          ]
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.containers.TabNavigator
        ,
        id: "tn"
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          percentHeight: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Form
              ,
              propertiesFactory: function():Object { return {
                label: "Types",
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: edu.isi.bmkeg.kefed.ui.TypeTemplateForm
                    ,
                    id: "_FieldTemplateTabs_TypeTemplateForm1"
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Types",
                      percentWidth: 100.0,
                      percentHeight: 100.0
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Form
              ,
              id: "_FieldTemplateTabs_Form2"
              ,
              propertiesFactory: function():Object { return {
                label: "Terms",
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: edu.isi.bmkeg.kefed.ui.OntologyIdFormItem
                    ,
                    id: "_FieldTemplateTabs_OntologyIdFormItem1"
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Terms",
                      direction: "vertical",
                      percentWidth: 100.0,
                      percentHeight: 100.0
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: edu.isi.bmkeg.kefed.ui.NotesComponent
              ,
              id: "_FieldTemplateTabs_NotesComponent1"
              ,
              propertiesFactory: function():Object { return {
                label: "Notes",
                percentWidth: 100.0,
                percentHeight: 100.0
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function FieldTemplateTabs()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _FieldTemplateTabs_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_edu_isi_bmkeg_kefed_ui_FieldTemplateTabsWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return FieldTemplateTabs[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.percentWidth = 100.0;
        this.percentHeight = 100.0;


        // events


        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


    //  scripts
    //  <Script>, line 11 - 65

	import edu.isi.bmkeg.kefed.ontology.OntologySearchInterface;
	import mx.utils.StringUtil;
	
	import mx.events.FlexEvent;
	import mx.managers.PopUpManager;
	import mx.collections.ArrayCollection;
	

	import com.kapit.diagram.view.DiagramObject;
	import com.kapit.diagram.view.DiagramView;
	
	import edu.isi.bmkeg.kefed.elements.KefedObject;
	import edu.isi.bmkeg.kefed.elements.KefedFieldTemplate;
	
	[Bindable]
	public var myObject:KefedFieldTemplate;
	
	/** Ontology search interface to be used for term lookup.
	 *  Required for proper finding of ontology terms.
	 */
	[Bindable]
	public var termLookupService:OntologySearchInterface;
	
	/** Monotonic controls whether only monotonic changes are allowed
	 *  or whether all changes are allowed.  Monotonic changes only 
	 *  allow additional values to be added to the allowed values or
	 *  allowed units sections.  Renaming or removal of values are
	 *  prohibited when monotonic is <code>true</code>
	 */
	[Bindable]
	public var monotonic:Boolean = false;

	/** Change the name of the field object.
	 * 
	 * @param event The event triggered by the name change.  Contains text element.
	 */
	private function handleObjectNameChanged(event:FlexEvent):void {
        var edit:TextInput = TextInput(event.currentTarget);
        var name:String = StringUtil.trim(edit.text);
        if (myObject != null) {        	
       		myObject.nameValue = name;
       	}
    }
    
    /** Clear the text field, unless there actually is a value set
    *   for the current myObject value.
    */
    private function clearTextInput(event:Event):void {
    	if (myObject == null) {
    		(event.target as TextInput).text = "";
    	}
    }
    
  	

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function __variableDataNameControl_valueCommit(event:mx.events.FlexEvent):void
{
	handleObjectNameChanged(event)
}


    //  binding mgmt
    private function _FieldTemplateTabs_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (myObject.nameValue);
                return (result == undefined ? null : String(result));
            },
            null,
            "variableDataNameControl.text"
            );

        result[1] = new mx.binding.Binding(this,
            function():Boolean
            {

                return (!monotonic);
            },
            null,
            "variableDataNameControl.editable"
            );

        result[2] = new mx.binding.Binding(this,
            function():Boolean
            {

                return (!monotonic);
            },
            null,
            "variableDataNameControl.enabled"
            );

        result[3] = new mx.binding.Binding(this,
            null,
            null,
            "_FieldTemplateTabs_TypeTemplateForm1.monotonic"
            , "monotonic");

        result[4] = new mx.binding.Binding(this,
            null,
            null,
            "_FieldTemplateTabs_TypeTemplateForm1.termLookupService"
            , "termLookupService");

        result[5] = new mx.binding.Binding(this,
            function():edu.isi.bmkeg.kefed.elements.KefedBaseValueTemplate
            {

                return (myObject.valueType);
            },
            null,
            "_FieldTemplateTabs_TypeTemplateForm1.myType"
            );

        result[6] = new mx.binding.Binding(this,
            function():Boolean
            {

                return (termLookupService != null);
            },
            null,
            "_FieldTemplateTabs_Form2.visible"
            );

        result[7] = new mx.binding.Binding(this,
            null,
            null,
            "_FieldTemplateTabs_OntologyIdFormItem1.myObject"
            , "myObject");

        result[8] = new mx.binding.Binding(this,
            null,
            null,
            "_FieldTemplateTabs_OntologyIdFormItem1.termLookupService"
            , "termLookupService");

        result[9] = new mx.binding.Binding(this,
            null,
            null,
            "_FieldTemplateTabs_NotesComponent1.myObject"
            , "myObject");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (FieldTemplateTabs)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
