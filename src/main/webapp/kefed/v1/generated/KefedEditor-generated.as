
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      KefedEditor
 *  Source:     /Users/Gully/Documents/Projects/2_active/IEDB/work/kefedEditor/src/main/flex/KefedEditor.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2017.08.30 16:17:01 PDT
 */

package 
{

import edu.isi.bmkeg.domains.neuralconnectivity.NeuralConnectivity;
import edu.isi.bmkeg.kefed.ontology.OntologySearchInterface;
import edu.isi.bmkeg.kefed.store.IDataStore;
import edu.isi.bmkeg.kefed.store.IModelStore;
import edu.isi.bmkeg.kefed.ui.CreditBox;
import edu.isi.bmkeg.kefed.ui.DesignerComponent;
import edu.isi.bmkeg.kefed.ui.InventoryComponent;
import edu.isi.bmkeg.kefed.ui.SpreadsheetComponent;
import edu.isi.bmkeg.kefed.ui.persevere.PersevereJSONForm;
import edu.isi.bmkeg.utils.powerloom.PowerLoom;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.collections.ArrayCollection;
import mx.containers.VBox;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.states.AddChild;
import mx.states.RemoveChild;
import mx.states.State;
import mx.styles.*;
import mx.utils.ObjectProxy;


[States("Dashboard_State", "Design_State", "ExperimentData_State", "JSONform", "Connectivity_State", "PowerLoomForm")]
[Frame(extraClass="_KefedEditor_FlexInit")]

[Frame(factoryClass="_KefedEditor_mx_managers_SystemManager")]


//  begin class def
public class KefedEditor
    extends mx.core.Application
    implements mx.binding.IBindingClient
{

    //  instance variables
/**
 * @private
 **/
    public var _KefedEditor_RemoveChild1 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _KefedEditor_RemoveChild2 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _KefedEditor_RemoveChild3 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _KefedEditor_RemoveChild4 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _KefedEditor_RemoveChild5 : mx.states.RemoveChild;

/**
 * @private
 **/
    public var _KefedEditor_RemoveChild6 : mx.states.RemoveChild;

    [Bindable]
	/**
 * @private
 **/
    public var configuration : XML;

    [Bindable]
	/**
 * @private
 **/
    public var connectivity : edu.isi.bmkeg.domains.neuralconnectivity.NeuralConnectivity;

    [Bindable]
	/**
 * @private
 **/
    public var designer : edu.isi.bmkeg.kefed.ui.DesignerComponent;

    [Bindable]
	/**
 * @private
 **/
    public var information : edu.isi.bmkeg.kefed.ui.CreditBox;

    [Bindable]
	/**
 * @private
 **/
    public var inventory : edu.isi.bmkeg.kefed.ui.InventoryComponent;

    [Bindable]
	/**
 * @private
 **/
    public var json : edu.isi.bmkeg.kefed.ui.persevere.PersevereJSONForm;

    [Bindable]
	/**
 * @private
 **/
    public var license : mx.utils.ObjectProxy;

    [Bindable]
	/**
 * @private
 **/
    public var powerloom : edu.isi.bmkeg.utils.powerloom.PowerLoom;

    [Bindable]
	/**
 * @private
 **/
    public var spreadsheet : edu.isi.bmkeg.kefed.ui.SpreadsheetComponent;


    //  type-import dummies


    //  Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.VBox
        ,
        id: "top"
        ,
        propertiesFactory: function():Object { return {
          percentHeight: 100.0,
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: edu.isi.bmkeg.kefed.ui.CreditBox
              ,
              id: "information"
              ,
              propertiesFactory: function():Object { return {
                percentHeight: 100.0,
                percentWidth: 100.0,
                componentName: "BioScholar"
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function KefedEditor()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _KefedEditor_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_KefedEditorWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return KefedEditor[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.viewSourceURL = "srcview/index.html";
        this.states = [_KefedEditor_State1_c(), _KefedEditor_State2_c(), _KefedEditor_State3_c(), _KefedEditor_State4_c(), _KefedEditor_State5_c(), _KefedEditor_State6_c()];
        _KefedEditor_XML1_i();
        _KefedEditor_ObjectProxy1_i();


        // events
        this.addEventListener("preinitialize", ___KefedEditor_Application1_preinitialize);
        this.addEventListener("initialize", ___KefedEditor_Application1_initialize);


        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_KefedEditor_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


    //  scripts
    //  <Script>, line 19 - 174

			import com.kapit.diagram.library.SVGAssetLibrary;
			
			import edu.isi.bmkeg.kefed.app.KefedAppEvent;
			import edu.isi.bmkeg.kefed.app.KefedAppEventDispatcher;
			import edu.isi.bmkeg.kefed.elements.KefedModel;
			import edu.isi.bmkeg.kefed.elements.KefedObject;
			import edu.isi.bmkeg.kefed.ontology.OntologySearchEvent;
			import edu.isi.bmkeg.kefed.ontology.OntologySearchInterface;
			import edu.isi.bmkeg.kefed.ontology.bioportal.NCBOBioPortalInterface;
			import edu.isi.bmkeg.kefed.ontology.sparql.SparqlOntologyInterface;
			import edu.isi.bmkeg.kefed.store.IDataStore;
			import edu.isi.bmkeg.kefed.store.IModelStore;
			import edu.isi.bmkeg.kefed.store.elasticSearch.ElasticSearchDataStore;
			import edu.isi.bmkeg.kefed.store.elasticSearch.ElasticSearchModelStore;
			import edu.isi.bmkeg.kefed.ui.UiUtil;
			import edu.isi.bmkeg.kefed.ui.kapit.DiagramMappings;
			import edu.isi.bmkeg.utils.Parameters;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.managers.BrowserManager;
			import mx.managers.IBrowserManager;
			import mx.rpc.events.FaultEvent;
			import mx.utils.URLUtil;
		
			[Bindable]
			public var serverUrl:String;
			
			[Bindable]
			public var modelStore:IModelStore = null;
			
			[Bindable]
			public var schemaStore:IModelStore = null;
			
			[Bindable]
			public var dataStore:IDataStore = null;
			
			[Bindable]
			private var jsonFormModelStore:IModelStore = null;
			
			[Bindable]
			private var jsonFormDataStore:IDataStore = null;
			
			[Bindable]
			private var termLookupService:OntologySearchInterface = null;
			private var ontologyLookupService:OntologySearchInterface = null;

			[Bindable]
			public var ontologyList:ArrayCollection = new ArrayCollection();
			public var selectedOntologies:Array = new Array();
				          			
			public var config:Parameters;
			public var model:KefedModel;
			public var eventDispatcher:KefedAppEventDispatcher = new KefedAppEventDispatcher;
			public var lib:SVGAssetLibrary;
			
			private var version:String = "$Revision: 2665 $";

			private function init():void {

				UiUtil.agreeToLicense(license.key, license.license);
				cursorManager.setBusyCursor();
				if (serverUrl==null) {
					serverUrl = URLUtil.getProtocol(this.url) + "://"
				 	         + URLUtil.getServerNameWithPort(this.url) + "/";
				}
				trace(this.name + " serverURL = " + serverUrl);
				config = new Parameters(configuration);
				
				// Setup the URLs for the various persistent storage mechanisms.
				// Since the schemaStore is optional, it gets a null default value.
				var modelStoreUrl:String = config.getValue("modelStoreUrl", "elasticSearch/KefedModel");
				var schemaStoreUrl:String = config.getValue("schemaStoreUrl", null);
				var dataStoreUrl:String = config.getValue("dataStoreUrl", "elasticSearch/KefedModel");

				modelStoreUrl = URLUtil.getFullURL(serverUrl, modelStoreUrl);
				modelStore = new ElasticSearchModelStore(modelStoreUrl);
				jsonFormModelStore = new ElasticSearchModelStore(modelStoreUrl);
				if (schemaStoreUrl != null) {
					schemaStoreUrl = URLUtil.getFullURL(serverUrl, schemaStoreUrl);
					schemaStore = new ElasticSearchModelStore(schemaStoreUrl);
				}
				dataStoreUrl = URLUtil.getFullURL(serverUrl, dataStoreUrl);
				dataStore = new ElasticSearchDataStore(dataStoreUrl);
				jsonFormDataStore = new ElasticSearchDataStore(dataStoreUrl);

				//  Setup up webservice for ontology and ontology term lookup
				var ontologyLookupType:String = config.getValue("ontologyLookupType", "ncbo");
				if (ontologyLookupType == "ncbo") {
					ontologyLookupService = new NCBOBioPortalInterface();
					termLookupService = new NCBOBioPortalInterface();
				} else if (ontologyLookupType == "sparql") {
					var ontologyLookupUrl:String = config.getValue("ontologyLookupUrl", null);
					var ontologyLookupOntologyId:String = config.getValue("ontologyLookupOntologyId", null);
					var ontologyLookupOntologyName:String = config.getValue("ontologyLookupOntologyName",null);
					if (ontologyLookupUrl) {
						ontologyLookupService = new SparqlOntologyInterface(ontologyLookupOntologyId,
																	        ontologyLookupUrl,
																	        ontologyLookupOntologyName);
						termLookupService = new SparqlOntologyInterface(ontologyLookupOntologyId,
																		ontologyLookupUrl,
																		ontologyLookupOntologyName);
					} else {
						Alert.show("No URL provided for SPARQL ontology lookup service.  Feature disabled.",
								   "Error");
					}
				}
				termLookupService.addEventListener(OntologySearchEvent.SEARCH_SERVICE_READY, termLookupReadyHandler);
				termLookupService.initialize();

				ontologyLookupService.addEventListener(OntologySearchEvent.LIST_ONTOLOGIES, listOntologiesEventHandler);
				ontologyLookupService.addEventListener(FaultEvent.FAULT, FaultEventHandler);
				ontologyLookupService.addEventListener(OntologySearchEvent.SEARCH_SERVICE_READY, listOntologiesReadyHandler);
				ontologyLookupService.initialize();			

				FlexGlobals.topLevelApplication.setFocus();
			}

			private function listOntologiesReadyHandler(event:OntologySearchEvent):void {
				ontologyLookupService.listOntologies();
			}
			
			private function listOntologiesEventHandler(event:OntologySearchEvent):void {			
                this.ontologyList = event.searchResults;
                this.eventDispatcher.dispatchBioScholarEvent(KefedAppEvent.ONTOLOGY_LIST_LOADED);
	  		}	
			
			private function FaultEventHandler(event:FaultEvent):void {
				Alert.show(UiUtil.getFaultURL(event) + "\n" + event.message.toString());
			}
			
			private function termLookupReadyHandler(event:OntologySearchEvent):void {
				cursorManager.removeBusyCursor();
				currentState = "Dashboard_State";
			}
			
			public function getOntologyList():String {
				var separator:String = "";
				var s:String = "All";
				if (selectedOntologies.length > 0) {
					s = "";
					OntologySearchInterface.allowedOntologyList = new ArrayCollection();
					for each (var ontology:Object in selectedOntologies) {
						s += separator + ontology.shortName;
						separator = ", ";
						OntologySearchInterface.allowedOntologyList.addItem(ontology.ontologyId);
					}
				} else {
					OntologySearchInterface.allowedOntologyList = null;
				}
				return s;
			}

		

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _KefedEditor_XML1_i() : XML
{
	var temp : XML = <configuration><modelStoreType>elasticSearch</modelStoreType><modelStoreUrl>http://localhost:8080/</modelStoreUrl><dataStoreType>elasticSearch</dataStoreType><dataStoreUrl>http://localhost:8080/</dataStoreUrl><callbackFunction>alert</callbackFunction><ontologyLookupType>ncbo</ontologyLookupType><action>copyModel</action><uid>28E9B7E0-C52C-3D14-0ECB-BBDDA991F23C</uid></configuration>;
	configuration = temp;
	mx.binding.BindingManager.executeBindings(this, "configuration", configuration);
	return temp;
}

private function _KefedEditor_ObjectProxy1_i() : mx.utils.ObjectProxy
{
	var temp : mx.utils.ObjectProxy = new mx.utils.ObjectProxy();
	temp.key = "Kefed_License_1.0";
	temp.license = ["\n\n== KAPIT Diagrammer Library License ==\n\nCOMPONENT LICENSE AGREEMENT – FREE VERSION \n\nThe component (hereinafter referred to as the “Software”) you are about to download, including its documentation, is protected under the French intellectual property Code. Ownership of this Software is and shall remain vested in KAP IT, a French company registered under number B 483.404.570 in Evry. The Software is deposited at the French “Agence pour la Protection des Programmes”.\n\nBy downloading or installing the Software, you acknowledge your understanding and acceptance of the following terms and conditions, and your authority to do so on behalf of your company (if applicable). KAP IT is only willing to grant to you the right to use the Software under these terms and conditions. \n\nAny use or reproduction of the Software, even partially, outside of the terms and conditions expressed below, is strictly prohibited, would infringe KAP IT intellectual property rights and could result in civil and criminal prosecutions. \n\nNo right, title or interest in the Software is transferred to you by this Component License Agreement, except for the non-exclusive and non-transferable right to use the Software under the conditions and limits defined below: \n\n1. You are authorized, for your personal use or for the internal use of your company: \n- to make as many copies of the Software as you wish; \n- to integrate the Software in another application if the use of such application is also limited to your personal use or to the internal use of your company. \n\n2. You cannot provide the Software to a third party, nor use it for the benefit of a third party, whether on a free or paying basis, except in the case referred to in paragraph 3. \n\n3. Despite the foregoing, you are authorized to provide the Software to a third party if all the following conditions are met: \n- the Software must be integrated in an application you developed (hereinafter the “Application”); \n- the Application must be provided to your customers on a free basis; any commercial distribution of the Application or of the Software is prohibited under this license, and requires the acquisition of a commercial license of the Software; \n- the Application must be exclusively provided to your customers and your customers must be the end users of the Application; \n- the license agreement of the Application must therefore prohibit the customer from granting any right of use or any right of reproduction of the Application to any third party; \n- you must ensure that, before any use of the Application, your customers, end users of the Application, accept and agree, in turn, to abide by the terms of the present Component License Agreement, whether in writing or by clicking on a “Yes” or “I accept” button. \n\n4. You are strictly prohibited from using the Software to develop any other software which would not be directly used by end users, and in particular, to develop another software component likely to compete with the Software. \n\n5. In all cases, the rights you are hereby granted on the Software relate exclusively to its executable code: you must not translate, create derivative works, decompile, disassemble, reverse-engineer or try in any other manner to obtain or deduce the source code from the executable code, except in the cases expressly provided by the French intellectual property Code and subject to prior notice to KAP IT. \n\n6. Ownership of the demonstration programs provided with the Software is and shall remain vested in KAP IT. These programs are protected in the same way as the Software. Their source code is provided for illustration purposes. You can use it in order to assist with the development of related software but you may not modify, reproduce or redistribute, even on a free basis, the source code. \n\n7. You are prohibited from deleting, removing, deactivating or concealing, in any way, the mention “powered by KAP IT” or the hyperlink to KapLap website (http://lab.kapit.fr) which appear when running the Software. \n\n8. Apart from the cases defined above, any distribution or transfer, whether on a free or paying basis, and any commercial exploitation of the Software, in whole or in part, or of any application containing the Software, in whole or in part, are strictly prohibited. \n\nDISCLAIMER - LIMITATION OF LIABILITY: The Software is provided “as is” without warranty of any kind, either expressed or implied, including, but not limited to, warranty of compatibility with any hardware, software or operating system. KAP IT does not warrant the Software will meet your requirements or that its operation will be uninterrupted, error-free or virus-free. IN NO EVENT WILL KAP IT BE LIABLE TO YOU FOR ANY DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE SOFTWARE. \n\nACCESS RIGHT TO THE SOURCE CODE: The source code of the Software is deposited with the APP (“Agency for the Protection of Programs”: official French escrow agency). According to Section 6 of APP’s General Regulations, you can have access to the source code pursuant to the applicable legislation, or in case of liquidation of KAP IT. Access is only allowed after the approval of the APP’s arbitration commission and does not transfer any property rights to you. \n\nThis Component License Agreement shall be governed by and construed under the laws of France. It is written in English and French: in the event of divergence between the two versions, the English document will prevail. Any dispute relating to the Software shall be subject to the exclusive jurisdiction of the Paris, France courts. \n\n", "\n\n== BioScholar Application License ==\n\nCopyright (c) 2010 University of Southern California\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n", "\n\n== Prefuse Flare Library License ==\n\n  Copyright (c) 2007 Regents of the University of California.\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions\n  are met:\n\n  1. Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n  3.  Neither the name of the University nor the names of its contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  SUCH DAMAGE.\n  "];
	license = temp;
	mx.binding.BindingManager.executeBindings(this, "license", license);
	return temp;
}

private function _KefedEditor_State1_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "Dashboard_State";
	temp.overrides = [_KefedEditor_RemoveChild1_i(), _KefedEditor_AddChild1_c()];
	return temp;
}

private function _KefedEditor_RemoveChild1_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_KefedEditor_RemoveChild1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_KefedEditor_RemoveChild1", _KefedEditor_RemoveChild1);
	return temp;
}

private function _KefedEditor_AddChild1_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.relativeTo = "top";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_KefedEditor_InventoryComponent1_i);
	return temp;
}

private function _KefedEditor_InventoryComponent1_i() : edu.isi.bmkeg.kefed.ui.InventoryComponent
{
	var temp : edu.isi.bmkeg.kefed.ui.InventoryComponent = new edu.isi.bmkeg.kefed.ui.InventoryComponent();
	temp.label = "Dashboard";
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.id = "inventory";
	if (!temp.document) temp.document = this;
	inventory = temp;
	mx.binding.BindingManager.executeBindings(this, "inventory", inventory);
	return temp;
}

private function _KefedEditor_State2_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "Design_State";
	temp.overrides = [_KefedEditor_RemoveChild2_i(), _KefedEditor_AddChild2_c()];
	return temp;
}

private function _KefedEditor_RemoveChild2_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_KefedEditor_RemoveChild2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_KefedEditor_RemoveChild2", _KefedEditor_RemoveChild2);
	return temp;
}

private function _KefedEditor_AddChild2_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.relativeTo = "top";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_KefedEditor_DesignerComponent1_i);
	return temp;
}

private function _KefedEditor_DesignerComponent1_i() : edu.isi.bmkeg.kefed.ui.DesignerComponent
{
	var temp : edu.isi.bmkeg.kefed.ui.DesignerComponent = new edu.isi.bmkeg.kefed.ui.DesignerComponent();
	temp.label = "Design";
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.id = "designer";
	if (!temp.document) temp.document = this;
	designer = temp;
	mx.binding.BindingManager.executeBindings(this, "designer", designer);
	return temp;
}

private function _KefedEditor_State3_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "ExperimentData_State";
	temp.overrides = [_KefedEditor_RemoveChild3_i(), _KefedEditor_AddChild3_c()];
	return temp;
}

private function _KefedEditor_RemoveChild3_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_KefedEditor_RemoveChild3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_KefedEditor_RemoveChild3", _KefedEditor_RemoveChild3);
	return temp;
}

private function _KefedEditor_AddChild3_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.relativeTo = "top";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_KefedEditor_SpreadsheetComponent1_i);
	return temp;
}

private function _KefedEditor_SpreadsheetComponent1_i() : edu.isi.bmkeg.kefed.ui.SpreadsheetComponent
{
	var temp : edu.isi.bmkeg.kefed.ui.SpreadsheetComponent = new edu.isi.bmkeg.kefed.ui.SpreadsheetComponent();
	temp.label = "Data";
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.id = "spreadsheet";
	if (!temp.document) temp.document = this;
	spreadsheet = temp;
	mx.binding.BindingManager.executeBindings(this, "spreadsheet", spreadsheet);
	return temp;
}

private function _KefedEditor_State4_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "JSONform";
	temp.overrides = [_KefedEditor_RemoveChild4_i(), _KefedEditor_AddChild4_c()];
	return temp;
}

private function _KefedEditor_RemoveChild4_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_KefedEditor_RemoveChild4 = temp;
	mx.binding.BindingManager.executeBindings(this, "_KefedEditor_RemoveChild4", _KefedEditor_RemoveChild4);
	return temp;
}

private function _KefedEditor_AddChild4_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.relativeTo = "top";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_KefedEditor_PersevereJSONForm1_i);
	return temp;
}

private function _KefedEditor_PersevereJSONForm1_i() : edu.isi.bmkeg.kefed.ui.persevere.PersevereJSONForm
{
	var temp : edu.isi.bmkeg.kefed.ui.persevere.PersevereJSONForm = new edu.isi.bmkeg.kefed.ui.persevere.PersevereJSONForm();
	temp.label = "json";
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.id = "json";
	if (!temp.document) temp.document = this;
	json = temp;
	mx.binding.BindingManager.executeBindings(this, "json", json);
	return temp;
}

private function _KefedEditor_State5_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "Connectivity_State";
	temp.overrides = [_KefedEditor_RemoveChild5_i(), _KefedEditor_AddChild5_c()];
	return temp;
}

private function _KefedEditor_RemoveChild5_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_KefedEditor_RemoveChild5 = temp;
	mx.binding.BindingManager.executeBindings(this, "_KefedEditor_RemoveChild5", _KefedEditor_RemoveChild5);
	return temp;
}

private function _KefedEditor_AddChild5_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.relativeTo = "top";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_KefedEditor_NeuralConnectivity1_i);
	return temp;
}

private function _KefedEditor_NeuralConnectivity1_i() : edu.isi.bmkeg.domains.neuralconnectivity.NeuralConnectivity
{
	var temp : edu.isi.bmkeg.domains.neuralconnectivity.NeuralConnectivity = new edu.isi.bmkeg.domains.neuralconnectivity.NeuralConnectivity();
	temp.label = "connectivity";
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.id = "connectivity";
	if (!temp.document) temp.document = this;
	connectivity = temp;
	mx.binding.BindingManager.executeBindings(this, "connectivity", connectivity);
	return temp;
}

private function _KefedEditor_State6_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "PowerLoomForm";
	temp.overrides = [_KefedEditor_RemoveChild6_i(), _KefedEditor_AddChild6_c()];
	return temp;
}

private function _KefedEditor_RemoveChild6_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_KefedEditor_RemoveChild6 = temp;
	mx.binding.BindingManager.executeBindings(this, "_KefedEditor_RemoveChild6", _KefedEditor_RemoveChild6);
	return temp;
}

private function _KefedEditor_AddChild6_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.relativeTo = "top";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_KefedEditor_PowerLoom1_i);
	return temp;
}

private function _KefedEditor_PowerLoom1_i() : edu.isi.bmkeg.utils.powerloom.PowerLoom
{
	var temp : edu.isi.bmkeg.utils.powerloom.PowerLoom = new edu.isi.bmkeg.utils.powerloom.PowerLoom();
	temp.label = "powerloom";
	temp.percentHeight = 100.0;
	temp.percentWidth = 100.0;
	temp.id = "powerloom";
	if (!temp.document) temp.document = this;
	powerloom = temp;
	mx.binding.BindingManager.executeBindings(this, "powerloom", powerloom);
	return temp;
}

/**
 * @private
 **/
public function ___KefedEditor_Application1_preinitialize(event:mx.events.FlexEvent):void
{
	DiagramMappings.initializeMappings();
}

/**
 * @private
 **/
public function ___KefedEditor_Application1_initialize(event:mx.events.FlexEvent):void
{
	init();
}


    //  binding mgmt
    private function _KefedEditor_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            null,
            null,
            "_KefedEditor_RemoveChild1.target"
            , "information");

        result[1] = new mx.binding.Binding(this,
            null,
            null,
            "inventory.modelStore"
            , "modelStore");

        result[2] = new mx.binding.Binding(this,
            null,
            null,
            "inventory.dataStore"
            , "dataStore");

        result[3] = new mx.binding.Binding(this,
            null,
            null,
            "inventory.schemaStore"
            , "schemaStore");

        result[4] = new mx.binding.Binding(this,
            null,
            null,
            "inventory.ontologyList"
            , "ontologyList");

        result[5] = new mx.binding.Binding(this,
            null,
            null,
            "_KefedEditor_RemoveChild2.target"
            , "information");

        result[6] = new mx.binding.Binding(this,
            function():edu.isi.bmkeg.kefed.ontology.OntologySearchInterface
            {

                return (termLookupService);
            },
            null,
            "designer.termLookupService"
            );

        result[7] = new mx.binding.Binding(this,
            null,
            null,
            "_KefedEditor_RemoveChild3.target"
            , "information");

        result[8] = new mx.binding.Binding(this,
            function():edu.isi.bmkeg.kefed.ontology.OntologySearchInterface
            {

                return (termLookupService);
            },
            null,
            "spreadsheet.termLookupService"
            );

        result[9] = new mx.binding.Binding(this,
            null,
            null,
            "_KefedEditor_RemoveChild4.target"
            , "information");

        result[10] = new mx.binding.Binding(this,
            function():edu.isi.bmkeg.kefed.store.IModelStore
            {

                return (jsonFormModelStore);
            },
            null,
            "json.modelStore"
            );

        result[11] = new mx.binding.Binding(this,
            function():edu.isi.bmkeg.kefed.store.IDataStore
            {

                return (jsonFormDataStore);
            },
            null,
            "json.dataStore"
            );

        result[12] = new mx.binding.Binding(this,
            null,
            null,
            "_KefedEditor_RemoveChild5.target"
            , "information");

        result[13] = new mx.binding.Binding(this,
            null,
            null,
            "connectivity.plserver"
            , "serverUrl");

        result[14] = new mx.binding.Binding(this,
            null,
            null,
            "_KefedEditor_RemoveChild6.target"
            , "information");

        result[15] = new mx.binding.Binding(this,
            null,
            null,
            "powerloom.plserver"
            , "serverUrl");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (KefedEditor)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;

    //  initialize style defs for KefedEditor

    mx_internal var _KefedEditor_StylesInit_done:Boolean = false;

    mx_internal function _KefedEditor_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_KefedEditor_StylesInit_done)
            return;
        else
            mx_internal::_KefedEditor_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }


    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
